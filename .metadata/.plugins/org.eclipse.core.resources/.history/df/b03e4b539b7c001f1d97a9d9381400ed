package net.taehyeon.kdtcom.controller;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;

import net.taehyeon.kdtcom.service.ClientIpAddress;
import net.taehyeon.kdtcom.service.FileUploadService;

@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations= {
		"classpath:root-context.xml",
		"classpath:servlet-context.xml"
})
public class MainControllerTest {

		private MockMvc mockMvc;
		
		@Mock
		private FileUploadService fileUploadService;
		
		@Mock
		private ClientIpAddress clientIpAddress;
		
		@InjectMocks
		private MainController mainController;
		
		@Before
		public void setUp() {
			MockitoAnnotations.initMocks(this);
			mockMvc = MockMvcBuilders.standaloneSetup(mainController).build();
		}
		
		@Test
		public void testRegisterPost() throws Exception{
			when(clientIpAddress.getClientIpAddress()).thenReturn("127.0.0.1");
			mockMvc.perform(post("/register")
					.param("userid", "testUser")
					.param("userpass", "testUser")
					.param("username", "tsetName")
					.param("useremail", "test@asdf.com")
					.param("usertel", "010-1234-1234")
					.param("zipcode", "1234")
					.param("address", "경기도")
					.param("address_detail", "장기동")
					.param("address_extra", "빈집")
					.param("userprofile", "test")
					).andExpect(status().isok())
		}
}
