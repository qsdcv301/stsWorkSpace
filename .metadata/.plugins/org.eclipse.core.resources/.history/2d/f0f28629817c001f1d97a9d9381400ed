package net.taehyeon.kdtcom.service;

import java.io.IOException;

import javax.servlet.ServletContext;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

@Service
public class FileUploadService {

	@Autowired;
	private ServletContext servletContext;

	private String[] allowedExt;
	private long maxSize;

	private String absolutePath;

	public String[] getAllowedExt() {
		return allowedExt;
	}

	public void setAllowedExt(String[] allowedExt) {
		this.allowedExt = allowedExt;
	}

	public long getMaxSize() {
		return maxSize;
	}

	public void setMaxSize(long maxSize) {
		this.maxSize = maxSize;
	}

	public String getAbsolutePath() {
		return absolutePath;
	}

	public void setAbsolutePath(String absolutePath) {
		this.absolutePath = absolutePath;
	}

	public String uploadFile(MultipartFile file) throws IOException {
		if (file == null || file.isEmpty()) {
			throw new IllegalArgumentException("파일이 없습니다.");
		}
		if (maxSize > 0 && file.getSize() > maxSize) {
			throw new IllegalArgumentException("파일이 지정한 사이즈보다 큽니다.");
		}

		if (allowedExt != null && allowedExt.length > 0) {
			String fileExt = getFileExt(file.getOriginalFilename());
			boolean isOkFileExt = false;

			for (String ext : allowedExt) {
				if (fileExt.equals(ext)) {
					isOkFileExt = true;
					break;
				}
			}
			if (!isOkFileExt) {
				throw new IllegalArgumentException("허용되지 않는 확장자입니다.");
			}
		}

		String realPath = servletContext.getRealPath("/res/upload/")+absolutePath + "/";
		
		return null;
	}

	private String getFileExt(String filename) {
		if (filename == null || filename.isEmpty()) {
			return "";
		}
		int dotIndex = filename.lastIndexOf(".");
		return (dotIndex != -1 && dotIndex < filename.length() - 1) ? filename.substring(dotIndex + 1) : "";
	}

}
